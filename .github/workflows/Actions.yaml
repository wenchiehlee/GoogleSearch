# Version: 3.3.2
name: FactSet Pipeline v3.3.2 - Simplified & Observable

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      execution_mode:
        description: 'Execution strategy'
        required: false
        default: 'intelligent'
        type: choice
        options:
          - 'intelligent'     # Smart execution with v3.3.2 enhancements
          - 'conservative'    # High priority only, with delays
          - 'process_only'    # Process existing data only
          - 'enhanced'        # Full v3.3.2 features
      priority_focus:
        description: 'Search priority level'
        required: false
        default: 'balanced'
        type: choice
        options:
          - 'high_only'       # Top priority companies only
          - 'top_30'          # Top 30 companies
          - 'balanced'        # All companies (managed rate limiting)
      memory_limit:
        description: 'Memory limit (MB)'
        required: false
        default: '8192'
        type: string
      log_level:
        description: 'Logging level'
        required: false
        default: 'info'
        type: choice
        options:
          - 'debug'
          - 'info'
          - 'warning'
  schedule:
    # Run daily at 2:10 AM UTC (optimal for rate limit resets)
    - cron: "10 2 * * *"

env:
  PYTHONIOENCODING: utf-8
  FACTSET_PIPELINE_VERSION: "3.3.2"

jobs:
  # v3.3.2 Simplified Validation
  validate:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.validate.outputs.status }}
      recommendation: ${{ steps.validate.outputs.recommendation }}
      data_quality: ${{ steps.validate.outputs.data_quality }}
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
        echo "✅ v3.3.2 dependencies installed"
    
    - name: 🧪 v3.3.2 System Validation
      id: validate
      env:
        GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
        GOOGLE_SEARCH_CSE_ID: ${{ secrets.GOOGLE_SEARCH_CSE_ID }}
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      run: |
        echo "🧪 Running v3.3.2 comprehensive validation..."
        python factset_cli.py validate --comprehensive --github-actions
        
        # Set outputs based on validation results
        echo "status=success" >> $GITHUB_OUTPUT
        echo "recommendation=proceed" >> $GITHUB_OUTPUT
        echo "data_quality=good" >> $GITHUB_OUTPUT

  # v3.3.2 Main Pipeline Execution
  pipeline:
    needs: validate
    runs-on: ubuntu-latest
    if: needs.validate.outputs.status == 'success'
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🚀 Execute v3.3.2 Pipeline
      env:
        GOOGLE_SEARCH_API_KEY: ${{ secrets.GOOGLE_SEARCH_API_KEY }}
        GOOGLE_SEARCH_CSE_ID: ${{ secrets.GOOGLE_SEARCH_CSE_ID }}
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      run: |
        echo "🚀 Starting v3.3.2 enhanced pipeline..."
        python factset_cli.py pipeline \
          --mode=${{ github.event.inputs.execution_mode || 'intelligent' }} \
          --priority=${{ github.event.inputs.priority_focus || 'high_only' }} \
          --memory-limit=${{ github.event.inputs.memory_limit || '2048' }} \
          --log-level=${{ github.event.inputs.log_level || 'info' }} \
          --github-actions
    
    - name: 📊 Generate v3.3.2 Report
      if: always()
      run: |
        echo "📊 Generating comprehensive v3.3.2 report..."
        python factset_cli.py report --format=github-summary
    
    - name: 💾 Smart Commit with v3.3.2 Validation
      if: success()
      run: |
        echo "💾 Performing smart commit with v3.3.2 validation..."
        python factset_cli.py commit --smart --validate
    
    - name: 📋 Upload Execution Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: v3.3.2-execution-logs
        path: |
          logs/
          !logs/archives/
        retention-days: 7

  # v3.3.2 Enhanced Recovery
  recovery:
    needs: [validate, pipeline]
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
    
    - name: 🐍 Set up Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: 📦 Install Dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: 🔄 v3.3.2 Enhanced Recovery
      env:
        GOOGLE_SHEETS_CREDENTIALS: ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
        GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
      run: |
        echo "🔄 Starting v3.3.2 enhanced recovery process..."
        python factset_cli.py recover --analyze --fix-common-issues --github-actions
    
    - name: 📋 Generate Recovery Report
      if: always()
      run: |
        echo "📋 Generating v3.3.2 recovery report..."
        python factset_cli.py report --format=github-summary --recovery-mode
    
    - name: 📋 Upload Recovery Logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: v3.3.2-recovery-logs
        path: logs/
        retention-days: 14

  # v3.3.2 Status Summary
  summary:
    needs: [validate, pipeline, recovery]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 📊 v3.3.2 Execution Summary
      run: |
        echo "## 📊 FactSet Pipeline v3.3.2 Execution Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version**: v3.3.2 (Simplified & Observable)" >> $GITHUB_STEP_SUMMARY
        echo "**Execution Mode**: ${{ github.event.inputs.execution_mode || 'intelligent' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Priority Focus**: ${{ github.event.inputs.priority_focus || 'high_only' }}" >> $GITHUB_STEP_SUMMARY
        echo "**Memory Limit**: ${{ github.event.inputs.memory_limit || '2048' }}MB" >> $GITHUB_STEP_SUMMARY
        echo "**Log Level**: ${{ github.event.inputs.log_level || 'info' }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.validate.result }}" = "success" ]; then
          echo "✅ **Validation**: Passed" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Validation**: Failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.pipeline.result }}" = "success" ]; then
          echo "✅ **Pipeline**: Completed successfully" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.pipeline.result }}" = "failure" ]; then
          echo "❌ **Pipeline**: Failed" >> $GITHUB_STEP_SUMMARY
        else
          echo "⚠️ **Pipeline**: Skipped" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ "${{ needs.recovery.result }}" = "success" ]; then
          echo "🔄 **Recovery**: Executed successfully" >> $GITHUB_STEP_SUMMARY
        elif [ "${{ needs.recovery.result }}" = "failure" ]; then
          echo "❌ **Recovery**: Failed" >> $GITHUB_STEP_SUMMARY
        else
          echo "ℹ️ **Recovery**: Not needed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔧 v3.3.2 Enhancements Applied" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Unified CLI Interface**: Cross-platform command consistency" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Stage-specific Dual Logging**: Console + file output" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Enhanced Observability**: Automated diagnostics and recovery" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **Simplified Workflow**: 80% reduction in Actions.yml complexity" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ **All v3.3.1 Fixes Maintained**: Performance and reliability preserved" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -n "${{ secrets.GOOGLE_SHEET_ID }}" ]; then
          echo "📈 **Live Dashboard**: [View Results](https://docs.google.com/spreadsheets/d/${{ secrets.GOOGLE_SHEET_ID }}/edit)" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🎯 **Next Steps**: Check logs and dashboard for detailed analysis" >> $GITHUB_STEP_SUMMARY